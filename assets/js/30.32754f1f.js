(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{195:function(e,r,t){"use strict";t.r(r);var i=t(0),v=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"selenium实现web自动化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#selenium实现web自动化","aria-hidden":"true"}},[e._v("#")]),e._v(" Selenium实现web自动化")]),e._v(" "),t("h2",{attrs:{id:"selenium-1-0工作原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#selenium-1-0工作原理","aria-hidden":"true"}},[e._v("#")]),e._v(" Selenium 1.0工作原理")]),e._v(" "),t("p",[e._v("​\t1.0又称Selenium Remote Control,利用的原理是：javascript代码可以很方便的获取页面上的任何元素并执行各种操作。（基于javascript代码注入）")]),e._v(" "),t("p",[e._v("​\t“同源策略”：只有来自相同域名、端口和协议的javascript代码才能被浏览器执行。所以selenium RC就必须欺骗被测站点，则需要引入selenium RC Server")]),e._v(" "),t("p",[e._v("​\tRC 包括两个部分 RC Server 、Client Libraries。RC Server包括Launcher、Http Proxy、Selenium Core。Client Libraries包括Java、c#、Ruby等等")]),e._v(" "),t("p",[e._v("​\tSelenium Core:被注入到浏览器页面中javascript函数集合，用来实现页面元素的识别和操作")]),e._v(" "),t("p",[e._v("​\tHttp Proxy：代理服务器，以达到欺骗被测站点目的")]),e._v(" "),t("p",[e._v("​\tLauncher：在启动测试浏览器时完成selenium core的注入和浏览器代理的设置")]),e._v(" "),t("p",[e._v("​\tClient Libraries:测试大爱吗向selenium rc server发送http请求的接口")]),e._v(" "),t("p",[e._v("Selenium RC的执行流程如下：")]),e._v(" "),t("ol",[t("li",[e._v("测试用例基于不同语言编写的Client Libraries向RC Server发送请求，要求建立连接")]),e._v(" "),t("li",[e._v("建立连接后，Launcher启动浏览器，把selenium core加载到浏览器页面并把浏览器代理设置为Http Proxy")]),e._v(" "),t("li",[e._v("测试用例向RC server发送http请求，RC server解析请求，通过http proxy发送javascript命令通知core执行浏览器上控件的具体操作")]),e._v(" "),t("li",[e._v("selenium core接收到指令后执行操作")]),e._v(" "),t("li",[e._v("若浏览器接收到新的页面请求，则发送请求新的页面，launcher启动浏览器时有代理，则rc server会接收到所有由它启动的浏览器发送的请求")]),e._v(" "),t("li",[e._v("rc server 接收到请求后，重组http请求规避同源策略，然后获取对应的web页面")]),e._v(" "),t("li",[e._v("http proxy把接收到的web页面返回给浏览器，")])]),e._v(" "),t("h2",{attrs:{id:"selenium-2-0工作原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#selenium-2-0工作原理","aria-hidden":"true"}},[e._v("#")]),e._v(" Selenium 2.0工作原理")]),e._v(" "),t("p",[e._v("2.0又称selenium webdriver，利用的原理是使用浏览器原生的webdriver实现页面操作。")]),e._v(" "),t("p",[e._v("webdriver是典型的server-client模式，执行流程如下：")]),e._v(" "),t("ol",[t("li",[e._v("client启动浏览器时，后台同时启动基于webdriver wire协议的web service作为remote server并与浏览器进行绑定，绑定后，remote server 开始监听client的请求")]),e._v(" "),t("li",[e._v("client将要执行的页面请求以http request的方式发送给remote server。http request的body是以webdriver wire协议规定的json格式来描述需要浏览器执行的具体操作")]),e._v(" "),t("li",[e._v("remote server接收到请求后，会请求解析，将解析结果发送给webdriver，由webdriver实际执行浏览器的操作")]),e._v(" "),t("li",[e._v("webdriver看作是直接操作浏览器的 原生组件，所以在测试前需要下载浏览器相应的webdriver")])])])}],!1,null,null,null);r.default=v.exports}}]);