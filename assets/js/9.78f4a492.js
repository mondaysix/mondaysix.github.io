(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{197:function(e,t,r){"use strict";r.r(t);var a=r(0),i=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"android-app基础知识"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#android-app基础知识","aria-hidden":"true"}},[e._v("#")]),e._v(" Android APP基础知识")]),e._v(" "),r("h2",{attrs:{id:"activity"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#activity","aria-hidden":"true"}},[e._v("#")]),e._v(" Activity")]),e._v(" "),r("p",[r("strong",[e._v("生命周期")]),e._v("：onCreate()--\x3eonStart()--\x3eonResume()--\x3eonPause()--\x3eonStop()---\x3eonRestart()--\x3eonDestroy()")]),e._v(" "),r("p",[e._v("启动Activity：onCreate()--\x3eonStart()--\x3eonResume()然后Activity进入运行状态")]),e._v(" "),r("p",[e._v("当前Activity被其他Activity覆盖,调用onPause()")]),e._v(" "),r("p",[e._v("当前ACTIVITY回到前台，调用OnResume")]),e._v(" "),r("p",[r("strong",[e._v("启动模式")])]),e._v(" "),r("p",[e._v("Standard（每次都会创建一个activity）、")]),e._v(" "),r("p",[e._v("singleTop（栈顶复用）：若需要创建的activity处于栈顶，则直接复用，onNewIntent（传入新的intent）会被调用。如果没有处于栈顶则和standard模式一致")]),e._v(" "),r("p",[e._v("singleTask(栈内复用)：若需要创建的activity处于栈内，则把存在他上面的所有activity都销毁")]),e._v(" "),r("p",[e._v("singleInstance(全局单例模式)：整个系统中只有一个")]),e._v(" "),r("p",[e._v("启动模式方式：")]),e._v(" "),r("p",[e._v("​       manifest.xml中静态指定，launchMode")]),e._v(" "),r("pre",[r("code",[e._v("intent中动态指定：addFlags\n")])]),e._v(" "),r("h2",{attrs:{id:"service"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#service","aria-hidden":"true"}},[e._v("#")]),e._v(" Service")]),e._v(" "),r("p",[e._v("启动方式：startservice和bindservice")]),e._v(" "),r("p",[e._v("**startservice：**启动一个服务执行后台任务，不进行通信，停止服务使用stopservice")]),e._v(" "),r("p",[e._v("生命周期：startservice—>oncreate---\x3eonstartcommand---\x3eservice running—>ondestroy")]),e._v(" "),r("p",[e._v("**bindservice:**启动服务可以进行通信，停止服务使用unbindservice")]),e._v(" "),r("p",[e._v("生命周期：bindservice---》oncreate---》onbind---》client are bound to service---》onunbind---》ondestroy")]),e._v(" "),r("p",[e._v("service需要注册在manifest")]),e._v(" "),r("p",[e._v("两者的区别：startservice与客户端是否退出没有关联关系，即使客户端停止运行，服务同样也会在后台运行。bindservice是与客户端绑定的，客户端退出，service也自动停止")]),e._v(" "),r("h2",{attrs:{id:"broadcastreceiver"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#broadcastreceiver","aria-hidden":"true"}},[e._v("#")]),e._v(" BroadcastReceiver")]),e._v(" "),r("p",[e._v("静态注册和动态注册")]),e._v(" "),r("h2",{attrs:{id:"contentprovider"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#contentprovider","aria-hidden":"true"}},[e._v("#")]),e._v(" ContentProvider")])])}],!1,null,null,null);t.default=i.exports}}]);